
trigger:
- main
- dev
- dev-gui
- feature/*
- hotfix/*
- release/*

jobs:

### Node Editor ###
- job: test_and_build_node_editor
  displayName: "Test and build node editor"
  condition: or(eq(variables['Build.Reason'], 'Manual'),or(eq(variables['Build.Reason'], 'PullRequest'),eq(variables['Build.Reason'], 'IndividualCI')))
  pool:
    vmImage: ubuntu-latest
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '18.x'
    displayName: 'Install Node.js'

  - script: |
      python -m pip install --upgrade pip
      pip install build
      pip install wheel
      pip install pytest-azurepipelines
      python -m pip install -e .[dev]
    displayName: 'Install build dependencies'

  - script: |
      npm install --global yarn
    displayName: 'Install yarn'

  - script: |
      cd yawning_titan_gui/network_editor && yarn
    displayName: 'yarn'

  - script: |
      cd yawning_titan_gui/network_editor && yarn test:ci
    displayName: 'yarn test'

  - script: |
      cd yawning_titan_gui/network_editor && yarn build
    displayName: 'yarn build'

  - script: |
      python manage.py runserver & (sleep 15 && cd yawning_titan_gui/network_editor && yarn test:ci:e2e)
    displayName: 'end to end test'
  
### End of Node Editor ###
- job: python
  displayName: "Build Yawning Titan"
  pool:
    vmImage: ubuntu-latest
  strategy:
    matrix:
      Python38:
        python.version: '3.8'
      Python310:
        python.version: '3.10'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      python -m pip install --upgrade pip
      pip install build
      pip install wheel
      pip install pytest-azurepipelines
    displayName: 'Install build dependencies'

  - script: |
      python setup.py sdist
    displayName: 'Build Yawning-Titan'

  - script: |
      YT=$(ls ./dist/yawningtitan-*.*.*.tar.gz)
      python -m pip install torch==1.11+cpu -f https://download.pytorch.org/whl/torch_stable.html
      python -m pip install $YT[dev] --default-timeout 1000
    displayName: 'Install Yawning-Titan'

  - script: |
      flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    displayName: 'Lint with flake8'

  - script: |
      pytest tests/ -m "not (unit_test or integration_test or e2e_integration_test)"
    displayName: 'Run unmarked tests'

  - script: |
      pytest tests/ -m unit_test
    displayName: 'Run unit tests'

  - script: |
      pytest tests/ -m integration_test
    displayName: 'Run integration tests'

  - script: |
      pytest tests/ -m e2e_integration_test
    displayName: 'Run end-to-end integration tests'
